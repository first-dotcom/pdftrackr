services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pdftrackr_postgres
    environment:
      POSTGRES_DB: pdftrackr
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pdftrackr-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pdftrackr_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pdftrackr-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pdftrackr_backend
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/pdftrackr
      - REDIS_URL=redis://redis:6379
      - FRONTEND_URL=http://localhost:3000
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY:-sk_test_placeholder}
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - pdftrackr-network
    command: npm run dev

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pdftrackr_frontend
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY:-pk_test_placeholder}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY:-sk_test_placeholder}
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - pdftrackr-network
    command: npm run dev

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: pdftrackr_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - pdftrackr-network

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: pdftrackr_grafana
    ports:
      - "3002:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - pdftrackr-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  pdftrackr-network:
    driver: bridge